# Authors of the project:
# 1-MachnevEgor_https://vk.com/machnev_egor
# 2-SchalimovDmitriy_https://vk.com/astronaut_without_spaceship
# 3-ArsenyKarimov_https://vk.com/id222338543
# 4-MihailMarkov_https://vk.com/mixxxxail
# Contacts in email:
# 1-meb.official.com@gmail.com
# 2-dmitriy-shalimov@yandex.ru
# 3-arseny.karimov@gmail.com
# 4-mihailmarkov2004@gmail.com

# import main modules
from configurationFile import BotConfig as BotConfig
import vk_api as vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
import json as json
from random import randint as randint
import time as time
import datetime as datetime

# reboot time
reboot_time = 10

# information about developers
about_bot = [
    "–î–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ –ø–æ —Ñ–∞–Ω—É –∑–∞–ø–∏–ª–∏–ª–∏ —Ä–∞–Ω–¥–æ–º–Ω—ã–µ —á–µ–ª–∏–∫–∏ –∏–∑ –ü–£–ú–∞. –≠—Ç–æ—Ç –±–æ—Ç –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –≤—Å–µ—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–º, —á—Ç–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —à–∫–æ–ª—ã, –∞ –Ω–µ —Ç—É–ø–æ –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–º —Å—Ç—Ä–æ–∫–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤. –ë–æ—Ç –ø—Ä–æ–¥—É–º–∞–Ω, –Ω–æ –Ω–µ –∏–¥–µ–∞–ª–µ–Ω, –ø–æ—ç—Ç–æ–º—É –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤ –±–µ—Å–µ–¥—É, –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—É—é –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É –±–æ—Ç–∞. –¢–∞–∫–∂–µ —Ö–æ—á–µ—Ç—Å—è –Ω–∞–ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å discord —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ —Å–µ–±–µ –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞, —É–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ –∏–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—Å—è –∫ —á—å–µ–π-—Ç–æ –∏–¥–µ–∏:\nhttps://discord.gg/EmJKG5xüòä"]
# array for keyboard
buttons_back = ["–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π", "–ø—Ä–∏–≤–µ—Ç", "—Ö–∞–π", "–∫—É–∫—É", "–∫—É", "—Å–∞–ª–∞–º", "—Å–∞–ª–∞–º–∞–ª–µ–π–∫—É–º", "–∑–¥–∞—Ä–æ–≤–∞", "–¥—ã–¥–æ–≤–∞", "–Ω–∞—á–∞—Ç—å",
                "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "–º–µ–Ω—é", "–ø–ª–∏—Ç–∫–∏", "–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞", "–Ω–∞–∑–∞–¥", "hello", "hey", "hi", "qq", "q", "start",
                "main menu", "menu", "tiles", "keyboard", "back"]
# auxiliary arrays
ru_greetings_bot = ["–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π", "–ø—Ä–∏–≤–µ—Ç", "—Ö–∞–π", "–∫—É", "—Å–∞–ª–∞–º", "–∑–¥–∞—Ä–æ–≤–∞", "–¥—ã–¥–æ–≤–∞"]
eng_greetings_bot = ["hello", "hey", "hi", "qq", "q"]


# algorithm for processing user requests
def bot_processing():
    # system arrays
    global groups_id_array
    groups_id_array = ["187254286"]
    global users_id_array
    users_id_array = []
    # sources protection
    global sources_protection
    sources_protection = []

    # vk connect
    vk = vk_api.VkApi(token=f"{BotConfig.BotToken}")
    vk._auth_token()
    vk.get_api()
    # connection information
    print("-----------------------------")
    print("Bot launched into the network")
    print("-----------------------------")

    # get buttons for the VK keyboard
    def get_button(label, color, payload=""):
        return {
            "action": {
                "type": "text",
                "payload": json.dumps(payload),
                "label": label
            },
            "color": color
        }

    # keyboards settings
    main_keyboard = {
        "one_time": False,
        "buttons": [
            [get_button(label="–ü–æ–ª—É—á–∏—Ç—å ID", color="positive"),
             get_button(label="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", color="positive")],
            [get_button(label="–û –±–æ—Ç–µ", color="primary")],
        ]
    }

    # json for keyboard
    main_keyboard = json.dumps(main_keyboard, ensure_ascii=False).encode("utf-8")
    main_keyboard = str(main_keyboard.decode("utf-8"))

    # sending messages
    def write_msg(id, message, keyboard=None, sticker_id=None, attachment=None):
        # sending data to the terminal
        print(f"Responce: {''.join(message)}")
        if sticker_id != None:
            print(f"Sticker: {sticker_id}")
        if attachment != None:
            print(f"Attachment: {attachment}")
        # send the message
        vk.method("messages.send", {"peer_id": id, "message": message, "keyboard": keyboard, "sticker_id": sticker_id,
                                    "attachment": attachment, "random_id": randint(1, 100000000)})

    # longpoll
    longpoll = VkBotLongPoll(vk, group_id=groups_id_array)
    # response logic
    for event in longpoll.listen():
        # processing a new message
        if event.type == VkBotEventType.MESSAGE_NEW:
            # sending data to the terminal
            print(datetime.datetime.today())
            print(f"Message from-->https://vk.com/id{event.object.peer_id}")
            print(f"Message content: {event.object.text}")
            # if the request is from in private messages
            if event.object.peer_id == event.object.from_id:
                # if this user is not already in the database
                if event.object.peer_id not in users_id_array:
                    users_id_array.append(event.object.peer_id)
                # if the back buttons are pressed
                if event.object.text.lower() in buttons_back:
                    # greetings and jump to main menu
                    if event.object.text.lower().lower() in ru_greetings_bot:
                        response_randomizer = randint(0, len(ru_greetings_bot) - 1)
                        response_word = ru_greetings_bot[response_randomizer]
                        get_user_name = vk.method("users.get", {"user_ids": event.object.peer_id})[0]["first_name"]
                        write_msg(event.object.peer_id, f"{response_word.title()}, {str(get_user_name)}!",
                                  keyboard=main_keyboard)
                    elif event.object.text.lower().lower() in eng_greetings_bot:
                        response_randomizer = randint(0, len(eng_greetings_bot) - 1)
                        response_word = eng_greetings_bot[response_randomizer]
                        get_user_name = vk.method("users.get", {"user_ids": event.object.peer_id})[0]["first_name"]
                        write_msg(event.object.peer_id, f"{response_word.title()}, {str(get_user_name)}!",
                                  keyboard=main_keyboard)
                    # only jump to main menu
                    else:
                        write_msg(event.object.peer_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüëå", keyboard=main_keyboard)
                # main keyboard
                elif event.object.text.lower() == "–ø–æ–ª—É—á–∏—Ç—å id":
                    write_msg(event.object.peer_id, f"–¢–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π ID –≤ –í–ö: id{event.object.peer_id}",
                              keyboard=main_keyboard)
                elif event.object.text.lower() == "–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è":
                    write_msg(event.object.peer_id,
                              "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ —á–µ–∫–∞–π —Å—Ç–µ–Ω—É —Å–æ–æ–±—â–µ—Å—Ç–≤–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∞–Ω–æ–Ω—Å–∞—ÖüôÇ",
                              keyboard=main_keyboard)
                elif event.object.text.lower() == "–æ –±–æ—Ç–µ":
                    write_msg(event.object.peer_id, about_bot, keyboard=main_keyboard)
                    write_msg(event.object.peer_id,
                              "–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ, —á—Ç–æ –≤—Å—é –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –Ω–∞ —Å—Ç–µ–Ω–µ –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞, –ø–æ—ç—Ç–æ–º—É, –µ—Å–ª–∏ –±–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –≤—ã –∑–Ω–∞–µ—Ç–µ, —á—Ç–æ –¥–µ–ª–∞—Ç—åüòâ",
                              keyboard=main_keyboard, attachment="photo222338543_457245618_dcd23490db181404fc")
                # easter egg
                elif event.object.text.lower() == "–ø–∞—Å—Ö–∞–ª–∫–∞":
                    write_msg(event.object.peer_id,
                              "–ü–∞—Å—Ö–∞–ª–∫–∞?! –í–∞—É, –≤ –±–æ—Ç–µ –µ—Å—Ç—å –ø–∞—Å—Ö–∞–ª–∫–∞! –ü—Ä–∏—Å—Ç—É–ø–∏–º, –µ—Å—Ç—å —à–∏—Ñ—Ä, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –ø–∏–∫—á–µ –Ω–∏–∂–µ - —Ä–∞—Å—à–∏—Ñ—Ä—É–π –µ–≥–æ –∏ –æ—Ç–ø–∏—à–∏—Å—å –≤ –æ–±—â—É—é –±–µ—Å–µ–¥—É —Å–æ–æ–±—â–µ—Å—Ç–≤–∞(–ø–æ–Ω–∏–º–∞–µ–º, —á—Ç–æ –¥–æ–≤–æ–ª—å–Ω–æ —Å–ª–æ–∂–Ω–æ, –ø–æ—ç—Ç–æ–º—É –¥–∞—ë–º –¥–≤–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏: ascii, tenet)",
                              keyboard=main_keyboard, attachment="photo222338543_457245619_81b41a6918becb0404")
                # unrecognized command
                else:
                    write_msg(event.object.peer_id, "–≠—Ç–æ —Ç–æ—á–Ω–æ –∫–æ–º–∞–Ω–¥–∞:/", keyboard=main_keyboard)
                # sending data to the terminal
                print("-----------------------------")


# connect and reconnect when disconnected
if __name__ == "__main__":
    while True:
        try:
            bot_processing()
        except Exception as E:
            print("-----------------------------")
            print(datetime.datetime.today())
            print("!!!  The bot is disabled  !!!")
            print(f"Reason: {E}")
            print("-----------------------------")
            time.sleep(reboot_time)
            print("!!!    Reconnect, wait    !!!")

# Authors of the project:
# 1-MachnevEgor_https://vk.com/machnev_egor
# 2-SchalimovDmitriy_https://vk.com/astronaut_without_spaceship
# 3-ArsenyKarimov_https://vk.com/id222338543
# 4-MihailMarkov_https://vk.com/mixxxxail
# Contacts in email:
# 1-meb.official.com@gmail.com
# 2-dmitriy-shalimov@yandex.ru
# 3-arseny.karimov@gmail.com
# 4-mihailmarkov2004@gmail.com

